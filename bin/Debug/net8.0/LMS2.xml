<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LMS2</name>
    </assembly>
    <members>
        <member name="T:LMS2.Controllers.BooksController">
            <summary>
            Book Routes
            </summary>
        </member>
        <member name="M:LMS2.Controllers.BooksController.#ctor(LMS2.Repository.IBooksRepository)">
            <summary>
            Book Controller
            </summary>
            <param name="booksRepository"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:LMS2.Controllers.BooksController.Get(System.Int32,System.Int32)">
            <summary>
            Get All Books Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BooksController.GetByID(System.Int32)">
            <summary>
            Get Book Data By Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BooksController.AddBook(LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Add New Book
            </summary>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BooksController.DeleteBook(System.Int32)">
            <summary>
            Delete Existing Book by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BooksController.PatchBook(System.Int32,LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Patch for updating book by title, description, genre, author, pub_name, pub_des, price, stock
            </summary>
            <param name="id"></param>
            <param name="book"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BooksController.GetBookBySearch(LMS2.Models.ViewModels.RequestBook,System.Int32,System.Int32)">
            <summary>
            Search book by Title, Genre, AuthorName, PublicationName
            </summary>
            <param name="requestBook"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:LMS2.Controllers.BorrowRecordsController">
            <summary>
            BorrowRecord Routes
            </summary>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.#ctor(LMS2.Repository.IBorrowRecordsRepository)">
            <summary>
            Borrow Record Controller Constructor
            </summary>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.Get">
            <summary>
            Get All Borrow Records Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.GetByID(System.Int32)">
            <summary>
            Get Borrow Record Data By Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.AddBorrowRecord(LMS2.Models.ViewModels.RequestBorrowRecord)">
            <summary>
            Add New Borrow Record
            </summary>
            <param name="requestBorrowRecord"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.DeleteBorrowRecord(System.Int32)">
            <summary>
            Delete Existing Borrow Records by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.PatchMember(System.Int32,LMS2.Models.ViewModels.RequestBorrowRecord)">
            <summary>
            Patch for updating Borrow Record by BookID, MemberID, borrowDate, dueDate and ReturnDate
            </summary>
            <param name="id"></param>
            <param name="borrowRecord"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.GetBorrowRecordBySearch(LMS2.Models.ViewModels.SearchBorrowRecords,System.Int32,System.Int32)">
            <summary>
            Search borrow records by bookId, memberId, borrowDate, dueDate, returnDate, bookName, author, genre, publisherName, memberName, email, mobileNumber, city, pincode
            </summary>
            <param name="searchBorrow"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.GetOverAllPenalty(System.Int32)">
            <summary>
            Get Overall Penalty
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.NotifyAllUsers">
            <summary>
            Notify all users for upcoming return date
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.BorrowRecordsController.RunDatabaseIntegrityJob">
            <summary>
            Run Database Integrity Job
            </summary>
            <returns></returns>
        </member>
        <member name="T:LMS2.Controllers.MembersController">
            <summary>
            Member Routes
            </summary>
        </member>
        <member name="M:LMS2.Controllers.MembersController.#ctor(LMS2.Repository.IMembersRepository)">
            <summary>
            Member Controlller
            </summary>
            <param name="membersRepository"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:LMS2.Controllers.MembersController.Get">
            <summary>
            Get All Member Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.MembersController.GetByID(System.Int32)">
            <summary>
            Get Member Data By Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.MembersController.AddMember(LMS2.Models.ViewModels.RequestMember)">
            <summary>
            Add New Member
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.MembersController.DeleteMember(System.Int32)">
            <summary>
            Delete Existing Member by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.MembersController.PatchMember(System.Int32,LMS2.Models.ViewModels.RequestMember)">
            <summary>
            Patch for updating member by name, email, mobile number, address, city, pincode
            </summary>
            <param name="id"></param>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Controllers.MembersController.GetMemberBySearch(LMS2.Models.ViewModels.RequestMember,System.Int32,System.Int32)">
            <summary>
            Search member by Name, Email, MobileNumber, City and Pincode
            </summary>
        </member>
        <member name="T:LMS2.DataContext.ApiContext">
            <summary>
            Api Context Class
            </summary>
            <remarks>
            Api Context Constructor
            </remarks>
            <param name="options"></param>
        </member>
        <member name="M:LMS2.DataContext.ApiContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{LMS2.DataContext.ApiContext})">
            <summary>
            Api Context Class
            </summary>
            <remarks>
            Api Context Constructor
            </remarks>
            <param name="options"></param>
        </member>
        <member name="P:LMS2.DataContext.ApiContext.Books">
            <summary>
            Book DBset
            </summary>
        </member>
        <member name="P:LMS2.DataContext.ApiContext.Members">
            <summary>
            Member DBset
            </summary>
        </member>
        <member name="P:LMS2.DataContext.ApiContext.BorrowRecords">
            <summary>
            Borrow Record DBset
            </summary>
        </member>
        <member name="T:LMS2.Migrations.InitialMigration">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.InitialMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.InitialMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.InitialMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.AddedMemeber">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedMemeber.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedMemeber.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedMemeber.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.changeingNullableValues">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.changeingNullableValues.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.changeingNullableValues.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.changeingNullableValues.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.AddedBorrowRecord">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedBorrowRecord.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedBorrowRecord.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedBorrowRecord.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.ChangesInBookModel">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.ChangesInBookModel.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.ChangesInBookModel.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.ChangesInBookModel.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.AddedIsDeletedInBook">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInBook.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInBook.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInBook.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.AddedIsDeletedInMember">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInMember.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInMember.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInMember.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.AddedIsDeletedInBorrowRecord">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInBorrowRecord.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInBorrowRecord.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsDeletedInBorrowRecord.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.FixedTypoInBooks">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.FixedTypoInBooks.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.FixedTypoInBooks.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.FixedTypoInBooks.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.AddedPenaltyAmountInBorrowRecords">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedPenaltyAmountInBorrowRecords.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedPenaltyAmountInBorrowRecords.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedPenaltyAmountInBorrowRecords.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.AddedIsPenaltyPaidInBorrowRecords">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsPenaltyPaidInBorrowRecords.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsPenaltyPaidInBorrowRecords.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.AddedIsPenaltyPaidInBorrowRecords.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Migrations.fixedPublisherDescription">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.fixedPublisherDescription.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.fixedPublisherDescription.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:LMS2.Migrations.fixedPublisherDescription.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:LMS2.Models.Book">
            <summary>
            Book Model
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.Id">
            <summary>
            Primary key with auto increment
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.Title">
            <summary>
            Title is required and has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.Description">
            <summary>
            Description is Required 
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.AuthorName">
            <summary>
            Author name is required and has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.Genre">
            <summary>
            Genre is required and has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.PublisherName">
            <summary>
            Publisher Name is required and has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.PublisherDescription">
            <summary>
            Publisher Desc is required
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.Price">
            <summary>
            Price is required and cannot be negative
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.CurrentStock">
            <summary>
            current Stock is required and cannot be negative
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.IsDeleted">
            <summary>
            is Deleted mark
            </summary>
        </member>
        <member name="P:LMS2.Models.Book.CreatedAt">
            <summary>
            Created Date is auto set as current dateTime
            </summary>
        </member>
        <member name="T:LMS2.Models.BorrowRecord">
            <summary>
            BorrowRecord Model
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.Id">
            <summary>
            Primary key with auto increment
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.BookId">
            <summary>
            Book Id is required and FK with Book
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.MemberId">
            <summary>
            Member Id is required and FK with Member
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.BorrowDate">
            <summary>
            BorrowDate is Required
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.DueDate">
            <summary>
            DueDate is Required
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.ReturnDate">
            <summary>
            ReturnDate is Not Required
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.IsDeleted">
            <summary>
            is Deleted mark
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.PenaltyAmount">
            <summary>
            Penalty Amount by default 0
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.CreatedAt">
            <summary>
            Created Date is auto set as current dateTime
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.IsPenaltyPaid">
            <summary>
            Penalty Status
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.Book">
            <summary>
            store the data of Book and not required field
            </summary>
        </member>
        <member name="P:LMS2.Models.BorrowRecord.Member">
            <summary>
            store the data of Book and not required field
            </summary>
        </member>
        <member name="T:LMS2.Models.Member">
            <summary>
            Member model
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.Id">
            <summary>
            Primary key with auto increment
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.Name">
            <summary>
            Name is required and has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.Email">
            <summary>
            Email is required and has limit upto 100 and regx to validate
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.MobileNumber">
            <summary>
            MobileNumber is required and has regx to validate
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.Address">
            <summary>
            Address is not required
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.City">
            <summary>
            City is not required
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.Pincode">
            <summary>
            Pincode is required and has regx to validate
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.IsDeleted">
            <summary>
            is Deleted mark
            </summary>
        </member>
        <member name="P:LMS2.Models.Member.CreatedAt">
            <summary>
            Created Date is auto set as current dateTime
            </summary>
        </member>
        <member name="T:LMS2.Models.ViewModels.RequestBook">
            <summary>
            model for request book
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.Title">
            <summary>
            Title has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.Description">
            <summary>
            Description 
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.AuthorName">
            <summary>
            Author name has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.Genre">
            <summary>
            Genre has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.PublisherName">
            <summary>
            Publisher Name has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.PublisherDescription">
            <summary>
            Publisher Desc 
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.Price">
            <summary>
            Price cannot be negative
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBook.CurrentStock">
            <summary>
            current stock cannot be negative
            </summary>
        </member>
        <member name="T:LMS2.Models.ViewModels.RequestBorrowRecord">
            <summary>
            model for request borrowRecord
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBorrowRecord.BookId">
            <summary>
            Book's ID
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBorrowRecord.MemberId">
            <summary>
            Member's ID
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBorrowRecord.BorrowDate">
            <summary>
            Borrow Date
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBorrowRecord.DueDate">
            <summary>
            Due Date
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBorrowRecord.ReturnDate">
            <summary>
            Return Date
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestBorrowRecord.IsPenaltyPaid">
            <summary>
            Penalty paid Statuts
            </summary>
        </member>
        <member name="T:LMS2.Models.ViewModels.RequestMember">
            <summary>
            Request Class for Member
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestMember.Name">
            <summary>
            Name and has limit upto 300
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestMember.Email">
            <summary>
            Email and has limit upto 100 and regx to validate
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestMember.MobileNumber">
            <summary>
            MobileNumber and has regx to validate
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestMember.Address">
            <summary>
            Address is not required
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestMember.City">
            <summary>
            City is not required
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.RequestMember.Pincode">
            <summary>
            Pincode and has regx to validate
            </summary>
        </member>
        <member name="T:LMS2.Models.ViewModels.SearchBorrowRecords">
            <summary>
            Search class for borrow Records
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.BookId">
            <summary>
            BookID
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.MemberId">
            <summary>
            MemberID
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.BorrowDate">
            <summary>
            Borrow Date
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.DueDate">
            <summary>
            Due Date
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.ReturnDate">
            <summary>
            Return Date
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.BookName">
            <summary>
            Book Name
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.Author">
            <summary>
            Author
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.Genre">
            <summary>
            Genre
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.PublisherName">
            <summary>
            Publisher Name
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.MemberName">
            <summary>
            Member Name
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.MobileNumber">
            <summary>
            Mobile Number
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:LMS2.Models.ViewModels.SearchBorrowRecords.Pincode">
            <summary>
            Pincode
            </summary>
        </member>
        <member name="T:LMS2.Program">
            <summary>
            Program Class
            </summary>
        </member>
        <member name="M:LMS2.Program.Main(System.String[])">
            <summary>
            Main Funtion work as entry point of the Solution
            </summary>
            <param name="args"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:LMS2.Repository.BooksRepository">
            <summary>
            Book Repo
            </summary>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.#ctor(LMS2.DataContext.ApiContext)">
            <summary>
            Book Repo Constructor
            </summary>
            <param name="context"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.GetAllBooks">
            <summary>
            Get All Books
            </summary>
            <returns></returns>
            <exception cref="T:LMS2.Utility.CustomException"></exception>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.GetAllBooksByPagination(System.Int32,System.Int32)">
            <summary>
            Get All Books with pagination
            </summary>
            <returns></returns>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.GetBookById(System.Int32)">
            <summary>
            Get Book by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.AddBook(LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Add new Book
            </summary>
            <param name="requestBook"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.DeleteBook(System.Int32)">
            <summary>
            Delete Book By Id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.UpdateBook(System.Int32,LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Update book by id and RequestBook
            </summary>
            <param name="id"></param>
            <param name="book"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.GetBooksBySearchParams(System.Int32,System.Int32,LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Get Filter data by search parms and with pagination
            </summary>
            <param name="newBook"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.BooksRepository.Save">
            <summary>
            Save Changes to DB
            </summary>
        </member>
        <member name="T:LMS2.Repository.BorrowRecordsRepository">
            <summary>
            Borrow Record Repo
            </summary>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.#ctor(LMS2.DataContext.ApiContext)">
            <summary>
            Borrow Record Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.GetAllBorrowRecords">
            <summary>
            Get all Borrow Records
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.GetBorrowRecordById(System.Int32)">
            <summary>
            Get Borrow Record By ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.AddBorrowRecord(LMS2.Models.ViewModels.RequestBorrowRecord)">
            <summary>
            Add new Borrow Record
            </summary>
            <param name="requestBorrowRecord"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.DeleteBorrowRecord(System.Int32)">
            <summary>
            Delete Borrow Record By ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.UpdateBorrowRecord(System.Int32,LMS2.Models.ViewModels.RequestBorrowRecord)">
            <summary>
            Update BorrowRecord with ID
            </summary>
            <param name="id"></param>
            <param name="requestBorrowRecord"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.GetBorrowRecordsBySearchParams(System.Int32,System.Int32,LMS2.Models.ViewModels.SearchBorrowRecords)">
            <summary>
            Search Borrow Record by Params
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchBorrowRecord"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.GetOverallPenaltyByMemberId(System.Int32)">
            <summary>
            
            </summary>
            <param name="memberId"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.GetBorrowRecordToNotify">
            <summary>
            Get Borrow Record to notify
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.BorrowRecordIntegrity">
            <summary>
            Borrow Record Integrity 
            </summary>
        </member>
        <member name="M:LMS2.Repository.BorrowRecordsRepository.Save">
            <summary>
            Save Changes in DB
            </summary>
        </member>
        <member name="T:LMS2.Repository.IBooksRepository">
            <summary>
            Interface of Book Repo
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBooksRepository.GetAllBooksByPagination(System.Int32,System.Int32)">
            <summary>
            Get all book data by pageNumber and pageSize
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.IBooksRepository.GetBookById(System.Int32)">
            <summary>
            Get book data by ID
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBooksRepository.AddBook(LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Add new Book 
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBooksRepository.UpdateBook(System.Int32,LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Update Book by ID
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBooksRepository.DeleteBook(System.Int32)">
            <summary>
            Delete Book Data
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBooksRepository.GetBooksBySearchParams(System.Int32,System.Int32,LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Search Book data
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBooksRepository.Save">
            <summary>
            Save Book data in DB
            </summary>
        </member>
        <member name="T:LMS2.Repository.IBorrowRecordsRepository">
            <summary>
            interface of Borrow Record Repo
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.GetAllBorrowRecords">
            <summary>
            Get all Borrow Records
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.GetBorrowRecordById(System.Int32)">
            <summary>
            Get Borrow Record by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.AddBorrowRecord(LMS2.Models.ViewModels.RequestBorrowRecord)">
            <summary>
            Add new BorrowRecord
            </summary>
            <param name="borrowRecord"></param>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.UpdateBorrowRecord(System.Int32,LMS2.Models.ViewModels.RequestBorrowRecord)">
            <summary>
            Update Borrow Record by ID
            </summary>
            <param name="id"></param>
            <param name="requestBorrowRecord"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.DeleteBorrowRecord(System.Int32)">
            <summary>
            Delete Borrow Record By ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.GetBorrowRecordsBySearchParams(System.Int32,System.Int32,LMS2.Models.ViewModels.SearchBorrowRecords)">
            <summary>
            Search borrow records over many fields
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchBorrowRecords"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.GetOverallPenaltyByMemberId(System.Int32)">
            <summary>
            Get overall penalty amount by member id
            </summary>
            <param name="memberId"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.GetBorrowRecordToNotify">
            <summary>
            Get borrow records to notify
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.BorrowRecordIntegrity">
            <summary>
            Borrow Record Intigrity Function
            </summary>
        </member>
        <member name="M:LMS2.Repository.IBorrowRecordsRepository.Save">
            <summary>
            Save Changes to DB
            </summary>
        </member>
        <member name="T:LMS2.Repository.IMembersRepository">
            <summary>
            Interface of Member Repo
            </summary>
        </member>
        <member name="M:LMS2.Repository.IMembersRepository.GetAllMembers">
            <summary>
            
            </summary>
        </member>
        <member name="M:LMS2.Repository.IMembersRepository.GetMemberById(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:LMS2.Repository.IMembersRepository.AddMember(LMS2.Models.ViewModels.RequestMember)">
            <summary>
            
            </summary>
        </member>
        <member name="M:LMS2.Repository.IMembersRepository.UpdateMember(System.Int32,LMS2.Models.ViewModels.RequestMember)">
            <summary>
            
            </summary>
        </member>
        <member name="M:LMS2.Repository.IMembersRepository.DeleteMember(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:LMS2.Repository.IMembersRepository.GetMembersBySearchParams(System.Int32,System.Int32,LMS2.Models.ViewModels.RequestMember)">
            <summary>
            
            </summary>
        </member>
        <member name="M:LMS2.Repository.IMembersRepository.Save">
            <summary>
            
            </summary>
        </member>
        <member name="T:LMS2.Repository.MembersRepository">
            <summary>
            Member Repo
            </summary>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.#ctor(LMS2.DataContext.ApiContext)">
            <summary>
            Member Repository
            </summary>
            <param name="context"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.GetAllMembers">
            <summary>
            Get All Members
            </summary>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.GetMemberById(System.Int32)">
            <summary>
            Get Member By ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.AddMember(LMS2.Models.ViewModels.RequestMember)">
            <summary>
            Add new member
            </summary>
            <param name="requestMember"></param>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.DeleteMember(System.Int32)">
            <summary>
            Delete Member to Id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.UpdateMember(System.Int32,LMS2.Models.ViewModels.RequestMember)">
            <summary>
            Update Book by Id
            </summary>
            <param name="id"></param>
            <param name="requestMember"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.GetMembersBySearchParams(System.Int32,System.Int32,LMS2.Models.ViewModels.RequestMember)">
            <summary>
            Search Members
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="newMember"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Repository.MembersRepository.Save">
            <summary>
            Save Changes to DB
            </summary>
        </member>
        <member name="T:LMS2.Utility.CustomException">
            <summary>
            Custom Exception class
            </summary>
            <remarks>
            constructor for custom exception
            </remarks>
            <param name="message"></param>
        </member>
        <member name="M:LMS2.Utility.CustomException.#ctor(System.String)">
            <summary>
            Custom Exception class
            </summary>
            <remarks>
            constructor for custom exception
            </remarks>
            <param name="message"></param>
        </member>
        <member name="T:LMS2.Utility.CustomUtility">
            <summary>
            Utility Class
            </summary>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.GetBookDataFromIdByContext(LMS2.DataContext.ApiContext,System.Nullable{System.Int32})">
            <summary>
            Get Book by ID using Context Object
            </summary>
            <param name="context"></param>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.GetMemberDataFromIdByContext(LMS2.DataContext.ApiContext,System.Nullable{System.Int32})">
            <summary>
            Get Member by ID using Context Object
            </summary>
            <param name="context"></param>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.FilterBorrowRecordsBySearchParams(System.Linq.IQueryable{LMS2.Models.BorrowRecord},LMS2.Models.ViewModels.SearchBorrowRecords)">
            <summary>
            Filter for Search Params
            </summary>
            <param name="allBorrowRecords"></param>
            <param name="searchParams"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.ConvertRequestBorrowRecordToBorrowRecord(LMS2.Models.ViewModels.RequestBorrowRecord,LMS2.Models.Book,LMS2.Models.Member,System.Int32)">
            <summary>
            Convert RequestBorrowRecord to BorrowRecords
            </summary>
            <param name="requestBorrowRecord"></param>
            <param name="book"></param>
            <param name="member"></param>
            <param name="penaltyRate"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.ConvertRequestBookToBook(LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Convert RequestBook to Book
            </summary>
            <param name="requestBook"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.ConvertRequestMemberToMember(LMS2.Models.ViewModels.RequestMember)">
            <summary>
            Convert RequestMember To Member
            </summary>
            <param name="requestMember"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.UpdateObject1WithObject2(System.Object,System.Object)">
            <summary>
            Update Object 1 using Object 2
            </summary>
            <param name="Obj1"></param>
            <param name="Obj2"></param>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.FilterBooksBySearchParams(System.Linq.IQueryable{LMS2.Models.Book},LMS2.Models.ViewModels.RequestBook,System.Int32,System.Int32)">
            <summary>
            Filter Books By Search Params
            </summary>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.FilterMembersBySearchParams(LMS2.DataContext.ApiContext,LMS2.Models.ViewModels.RequestMember,System.Int32,System.Int32)">
            <summary>
            Filter Members By Search Params
            </summary>
            <param name="_context"></param>
            <param name="member"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:LMS2.Utility.CustomUtility.CalculatePenaltyAmount(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Calculate penalty amount
            </summary>
            <param name="DueDate"></param>
            <param name="ReturnDate"></param>
            <param name="penaltyRate"></param>
            <returns></returns>
        </member>
        <member name="T:LMS2.Utility.EmailSender">
            <summary>
            Email Sender class
            </summary>
        </member>
        <member name="M:LMS2.Utility.EmailSender.#ctor">
            <summary>
            Email sender constructor
            </summary>
        </member>
        <member name="M:LMS2.Utility.EmailSender.SendEmail(LMS2.Models.BorrowRecord)">
            <summary>
            Send Email message
            </summary>
        </member>
        <member name="T:LMS2.Utility.Logger">
            <summary>
            Logger Class
            </summary>
        </member>
        <member name="M:LMS2.Utility.Logger.LogException(System.Exception)">
            <summary>
            Log Exception into LogFile
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:LMS2.Utility.ValidationUtility">
            <summary>
            Validation class as utility
            </summary>
        </member>
        <member name="M:LMS2.Utility.ValidationUtility.CheckValidBorrowDate(LMS2.Models.ViewModels.RequestBorrowRecord,LMS2.Models.BorrowRecord)">
            <summary>
            Check gor vaild date of Borrow Records
            </summary>
            <param name="requestBorrowRecord"></param>
            <param name="foundBorrowRecord"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.ValidationUtility.IsBorrowRecordAlreadyExist(System.Linq.IQueryable{LMS2.Models.BorrowRecord},LMS2.Models.ViewModels.RequestBorrowRecord)">
            <summary>
            Check Borrow Record Exist Already?
            </summary>
            <param name="allBorrowRecords"></param>
            <param name="requestBorrowRecord"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.ValidationUtility.IsBookAlreadyExist(System.Linq.IQueryable{LMS2.Models.Book},LMS2.Models.ViewModels.RequestBook)">
            <summary>
            Check Book Exist Already?
            </summary>
            <param name="allBooks"></param>
            <param name="requestBook"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.ValidationUtility.IsMemberAlreadyExist(System.Linq.IQueryable{LMS2.Models.Member},LMS2.Models.ViewModels.RequestMember)">
            <summary>
            Check Member Exist Already?
            </summary>
            <param name="allMembers"></param>
            <param name="requestMember"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.ValidationUtility.ObjectIsNullOrEmpty(System.Object)">
            <summary>
            Check Object is Null or Empty
            </summary>
            <param name="obj"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:LMS2.Utility.ValidationUtility.PageInfoValidator(System.Int32,System.Int32)">
            <summary>
            Validate Page Size and Page Number
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
    </members>
</doc>
